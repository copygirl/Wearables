plugins {
	id "fabric-loom" version "0.2.5-SNAPSHOT"
	id "com.jfrog.artifactory" version "4.9.0"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version          = project.mod_version
group            = project.maven_group

minecraft {
}

dependencies {
	minecraft  "com.mojang:minecraft:${project.minecraft_version}"
	mappings   "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

processResources {
	inputs.property "version", project.version
	
	from (sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}
	
	from (sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// Ensure that the encoding is set to UTF-8, no matter what the system default is.
// This fixes some edge cases with special characters not displaying correctly.
// See http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "UNLICENSE"
}

// Publishing Details
if (rootProject.file("private.gradle").exists()) {
	apply from: "private.gradle"
}

// Configure Maven Publication
publishing {
	publications {
		maven (MavenPublication) {
			// Add all JARs that should be included when publishing to maven.
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
				classifier null
				builtBy remapJar
			}
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
				classifier "dev"
				builtBy remapJar
			}
			artifact (sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to.
	repositories {
		// Uncomment to publish to the local maven.
		// mavenLocal()
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = "http://server.bbkr.space:8081/artifactory/"
		publish {
			repository {
				repoKey  = version.contains("SNAPSHOT") ? "libs-snapshot" : "libs-release"
				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications("maven")
				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}
